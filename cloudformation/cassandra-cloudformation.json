{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "InstanceType": {
      "Type": "String",
      "Default": "t2.small",
      "ConstraintDescription": "must be a valid EC2 instance type"
    },
    "VpcId": {
      "Type": "String",
      "ConstraintDescription": "must be an existing VPC ID"
    },
    "SubnetId": {
      "Type": "String",
      "ConstraintDescription": "must be an existing subnet ID"
    },
    "SecurityGroupId": {
      "Type": "String",
      "ConstraintDescription": "must be an existing security group ID"
    },
    "KeyName": {
      "Type": "String",
      "ConstraintDescription": "must be an existing key pair name"
    },
    "Ec2InstanceRole": {
      "Type": "String",
      "ConstraintDescription": "must be an existing IAM role with the proper policies"
    },
    "Ec2Seed1Ip": {
      "Type": "String",
      "ConstraintDescription": "the private IP of seed 1"
    },
    "Ec2Seed2Ip": {
      "Type": "String",
      "ConstraintDescription": "the private IP of seed 2"
    },
    "Ec2Seed3Ip": {
      "Type": "String",
      "ConstraintDescription": "the private IP of seed 3"
    },
    "Ec2OpscenterdIp": {
      "Type": "String",
      "ConstraintDescription": "the IP of the OpsCenter server, used as stomp_interface"
    },
    "CookbookS3": {
      "Type": "String",
      "ConstraintDescription": "the S3 path to the cookbook tar.gz file"
    },
    "ClusterName": {
      "Type": "String",
      "ConstraintDescription": "the cluster name"
    }
  },
  "Mappings": {
    "RegionMap": {
      "eu-west-1": {
        "AMI": "ami-c15f79b6"
      }
    }
  },
  "Resources": {
    "Ec2Seed1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": true,
            "DeviceIndex": "0",
            "PrivateIpAddress": {
              "Ref": "Ec2Seed1Ip"
            },
            "SubnetId": {
              "Ref": "SubnetId"
            },
            "GroupSet": [
              {
                "Ref": "SecurityGroupId"
              }
            ]
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ex\n",
                "export CASSANDRA_CLUSTER_NAME=",
                {
                  "Ref": "ClusterName"
                },
                "\n",
                "export CASSANDRA_SEEDS=",
                {
                  "Fn::Join": [
                    ",",
                    [
                      {
                        "Ref": "Ec2Seed1Ip"
                      },
                      {
                        "Ref": "Ec2Seed2Ip"
                      },
                      {
                        "Ref": "Ec2Seed3Ip"
                      }
                    ]
                  ]
                },
                "\n",
                "export CASSANDRA_BROADCAST_ADDRESS=",
                {
                  "Ref": "Ec2Seed1Ip"
                },
                "\n",
                "export CASSANDRA_BROADCAST_RPC_ADDRESS=",
                {
                  "Ref": "Ec2Seed1Ip"
                },
                "\n",
                "export CASSANDRA_OPSCENTER_SERVER_ADDRESS=",
                {
                  "Ref": "Ec2OpscenterdIp"
                },
                "\n",
                "export CASSANDRA_OPSCENTER_LOCAL_INTERFACE=",
                {
                  "Ref": "Ec2Seed1Ip"
                },
                "\n",
                "export CASSANDRA_OPSCENTER_AGENT_RPC_BROADCAST_ADDRESS=",
                {
                  "Ref": "Ec2Seed1Ip"
                },
                "\n",
                "aws s3 cp '",
                {
                  "Ref": "CookbookS3"
                },
                "' cookbook.tar.gz\n",
                "chef-solo -r cookbook.tar.gz -o \"recipe[cassandra-example::cassandra]\"\n"
              ]
            ]
          }
        },
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "IamInstanceProfile": {
          "Ref": "InstanceRoleInstanceProfile"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "node1"
          }
        ]
      }
    },
    "Ec2Seed2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": true,
            "DeviceIndex": "0",
            "PrivateIpAddress": {
              "Ref": "Ec2Seed2Ip"
            },
            "SubnetId": {
              "Ref": "SubnetId"
            },
            "GroupSet": [
              {
                "Ref": "SecurityGroupId"
              }
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ex\n",
                "export CASSANDRA_CLUSTER_NAME=",
                {
                  "Ref": "ClusterName"
                },
                "\n",
                "export CASSANDRA_SEEDS=",
                {
                  "Fn::Join": [
                    ",",
                    [
                      {
                        "Ref": "Ec2Seed1Ip"
                      },
                      {
                        "Ref": "Ec2Seed2Ip"
                      },
                      {
                        "Ref": "Ec2Seed3Ip"
                      }
                    ]
                  ]
                },
                "\n",
                "export CASSANDRA_BROADCAST_ADDRESS=",
                {
                  "Ref": "Ec2Seed2Ip"
                },
                "\n",
                "export CASSANDRA_BROADCAST_RPC_ADDRESS=",
                {
                  "Ref": "Ec2Seed2Ip"
                },
                "\n",
                "export CASSANDRA_OPSCENTER_SERVER_ADDRESS=",
                {
                  "Ref": "Ec2OpscenterdIp"
                },
                "\n",
                "export CASSANDRA_OPSCENTER_LOCAL_INTERFACE=",
                {
                  "Ref": "Ec2Seed2Ip"
                },
                "\n",
                "export CASSANDRA_OPSCENTER_AGENT_RPC_BROADCAST_ADDRESS=",
                {
                  "Ref": "Ec2Seed2Ip"
                },
                "\n",
                "aws s3 cp '",
                {
                  "Ref": "CookbookS3"
                },
                "' cookbook.tar.gz\n",
                "chef-solo -r cookbook.tar.gz -o \"recipe[cassandra-example::cassandra]\"\n"
              ]
            ]
          }
        },
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "IamInstanceProfile": {
          "Ref": "InstanceRoleInstanceProfile"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "node2"
          }
        ]
      }
    },
    "Ec2Seed3": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": true,
            "DeviceIndex": "0",
            "PrivateIpAddress": {
              "Ref": "Ec2Seed3Ip"
            },
            "SubnetId": {
              "Ref": "SubnetId"
            },
            "GroupSet": [
              {
                "Ref": "SecurityGroupId"
              }
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ex\n",
                "export CASSANDRA_CLUSTER_NAME=",
                {
                  "Ref": "ClusterName"
                },
                "\n",
                "export CASSANDRA_SEEDS=",
                {
                  "Fn::Join": [
                    ",",
                    [
                      {
                        "Ref": "Ec2Seed1Ip"
                      },
                      {
                        "Ref": "Ec2Seed2Ip"
                      },
                      {
                        "Ref": "Ec2Seed3Ip"
                      }
                    ]
                  ]
                },
                "\n",
                "export CASSANDRA_BROADCAST_ADDRESS=",
                {
                  "Ref": "Ec2Seed3Ip"
                },
                "\n",
                "export CASSANDRA_BROADCAST_RPC_ADDRESS=",
                {
                  "Ref": "Ec2Seed3Ip"
                },
                "\n",
                "export CASSANDRA_OPSCENTER_SERVER_ADDRESS=",
                {
                  "Ref": "Ec2OpscenterdIp"
                },
                "\n",
                "export CASSANDRA_OPSCENTER_LOCAL_INTERFACE=",
                {
                  "Ref": "Ec2Seed3Ip"
                },
                "\n",
                "export CASSANDRA_OPSCENTER_AGENT_RPC_BROADCAST_ADDRESS=",
                {
                  "Ref": "Ec2Seed3Ip"
                },
                "\n",
                "aws s3 cp '",
                {
                  "Ref": "CookbookS3"
                },
                "' cookbook.tar.gz\n",
                "chef-solo -r cookbook.tar.gz -o \"recipe[cassandra-example::cassandra]\"\n"
              ]
            ]
          }
        },
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "IamInstanceProfile": {
          "Ref": "InstanceRoleInstanceProfile"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "node3"
          }
        ]
      }
    },
    "InstanceRoleInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "Ec2InstanceRole"
          }
        ]
      }
    }
  }
}
